static_resources:
  listeners:
  - name: listener
    address:
      socket_address: { address: 0.0.0.0, port_value: 80 }
    filter_chains:
    - filters:
      - name: envoy.filters.network.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          stat_prefix: ingress_http
          codec_type: AUTO
          route_config:
            name: local_route
            virtual_hosts:
            - name: local_service
              domains: ["*"]
              routes:
              - match:
                  prefix: "/"
                route:
                  cluster: service_grpc
                  auto_host_rewrite: true
                  timeout: 0s
                  max_stream_duration:
                    grpc_timeout_header_max: 0s
              cors:
                allow_origin_string_match:
                - prefix: "*"
                allow_methods: GET, PUT, DELETE, POST, OPTIONS
                allow_headers: keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,custom-header-1,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout,grpc-accept-encoding
                max_age: "1728000"
                expose_headers: grpc-status,grpc-message,grpc-status-details-bin,grpc-status-details-text
          http_filters:
          - name: envoy.filters.http.grpc_web # adding support for grpc_web
          - name: envoy.filters.http.cors
          - name: envoy.filters.http.router
  - name: listener_ssl
    address:
      socket_address: { address: 0.0.0.0, port_value: 443 }
    filter_chains:
    - filters:
      - name: envoy.filters.network.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          stat_prefix: ingress_http
          codec_type: AUTO
          route_config:
            name: local_route
            virtual_hosts:
            - name: local_service
              domains: ["*"]
              routes:
              - match:
                  prefix: "/"
                route:
                  cluster: service_grpc
                  auto_host_rewrite: true
                  timeout: 0s
                  max_stream_duration:
                    grpc_timeout_header_max: 0s
              cors:
                allow_origin_string_match:
                - prefix: "*"
                allow_methods: GET, PUT, DELETE, POST, OPTIONS
                allow_headers: keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,custom-header-1,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout,grpc-accept-encoding
                max_age: "1728000"
                expose_headers: grpc-status,grpc-message,grpc-status-details-bin,grpc-status-details-text
          http_filters:
          - name: envoy.filters.http.grpc_web # adding support for grpc_web
          - name: envoy.filters.http.cors
          - name: envoy.filters.http.router
      transport_socket:
        name: envoy.transport_sockets.tls
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext
          common_tls_context:
            alpn_protocols: "h2"
            tls_certificates:
            - certificate_chain: { filename: "./phoney-certs/certificate.pem" }
              private_key: { filename: "./phoney-certs/key.pem" }

  clusters:
  - name: service_grpc
    connect_timeout: 25s
    type: LOGICAL_DNS
    lb_policy: ROUND_ROBIN
    http2_protocol_options: { }
    load_assignment:
      cluster_name: service_grpc
      endpoints:
      - lb_endpoints:
        - endpoint:
            address: { socket_address: { address: server, port_value: 8080 }}
