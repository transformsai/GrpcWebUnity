// This file was automatically generated by TsLibGenerator.cs
interface JsValue {
  type: number,
  value: number | string,
}

enum JsTypes {
  Undefined = 0,
  Null = 1,
  Bool = 2,
  Number = 3,
  BigInt = 4,
  String = 5,
  Symbol = 6,
  Object = 7,
  Function = 8,
  Callback = 9,
  Promise = 10,
  Array = 11,
  TypedArray = 12,
  SharedTypedArray = 13,
  Exception = -1,
}

interface JsRuntime {
  GetGlobalObject: (name: string) => JsValue;
  CreateEmptyObject: () => JsValue;
  CreateString: (str: string) => JsValue;
  CreateArray: () => JsValue;
  CallSlow: (functionRef: number, paramArrayRef: number) => JsValue;
  Call: (functionRef: number, paramValue1: number, paramTypeId1: number, paramValue2: number, paramTypeId2: number, paramValue3: number, paramTypeId3: number) => JsValue;
  InvokeSlow: (targetRef: number, targetType: number, fnName: string, paramArrayRef: number) => JsValue;
  Invoke: (targetRef: number, targetType: number, fnName: string, paramValue1: number, paramTypeId1: number, paramValue2: number, paramTypeId2: number, paramValue3: number, paramTypeId3: number) => JsValue;
  ConstructSlow: (functionRef: number, paramArrayRef: number) => JsValue;
  Construct: (functionRef: number, paramValue1: number, paramTypeId1: number, paramValue2: number, paramTypeId2: number, paramValue3: number, paramTypeId3: number) => JsValue;
  GetProp: (objectRef: number, propNameValue: number, propNameTypeId: number) => JsValue;
  SetProp: (objectRef: number, propNameValue: number, propNameTypeId: number, value: number, valueTypeId: number) => JsValue;
  GetArrayElement: (arrayRef: number, index: number) => JsValue;
  SetArrayElement: (arrayRef: number, index: number, value: number, valueTypeId: number) => JsValue;
  CreateCallback: (paramArrayRef: number) => JsValue;
  CreateSharedTypedArray: (arrayPtr: number, typeCode: number, arrayLength: number) => JsValue;
  CreateTypedArray: (arrayPtr: number, typeCode: number, arrayLength: number) => JsValue;
  GarbageCollect: (value: number, typeId: number) => JsValue;
  Equals: (lhsValue: number, lhsType: number, rhsValue: number, rhsType: number) => JsValue;
  GetNumber: (value: number, typeId: number) => JsValue;
  GetString: (value: number, typeId: number) => JsValue;
  RespondToCallback: (responseRefId: number, value: number, typeId: number) => JsValue;
}

type TypedArray =
  | Int8Array
  | Uint8Array
  | Int16Array
  | Uint16Array
  | Int32Array
  | Uint32Array
  | Float32Array
  | Float64Array
  | Uint8ClampedArray;

enum TypedArrayTypeCode {
  Int8Array = 5,
  Uint8Array = 6,
  Int16Array = 7,
  Uint16Array = 8,
  Int32Array = 9,
  Uint32Array = 10,
  Float32Array = 13,
  Float64Array = 14,
  Uint8ClampedArray = 15,
}

type ArrayBuilder = (pointer: number, typeCode: TypedArrayTypeCode, length: number) => TypedArray;
type JsCallback = (callbackRefId: number, responseRefId: number, value: number, typeId: number, paramsAreArray: boolean) => void;
type ReferenceHandler = (refId: number) => boolean;

interface JsRuntimeConstructor 
{
  new (arrayBuilder: ArrayBuilder, callbackHandler: JsCallback, onAcquireReference: ReferenceHandler, onReleaseReference: ReferenceHandler): JsRuntime;
}

declare var Module : 
{
  ['UnityJsInterop']: JsRuntimeConstructor;
}
